<% provide(:title, "BK") %>

<div class="container artist-container">
  <br />
  <div class="row justify-content-center">
      <div class="col-lg-6 col-md-8">
        <h1 class="dark-on-light">∎ BOOKS ∎</h1>
        <br /><br />
      </div>
    </div>
  <div class="row justify-content-center body-text">
    <div class="col-lg-6 col-md-8">
      <p>This series of handmade book projects has been in progress since around 2005. They are usually bound, but in some cases exist as collections of loose pages. Clicking on a cover image below allows you to view the rest of that project.<br />
      </p>
    </div>
  </div>
  <br /><br />
  <div class="row align-items-center book-grid">
    <% @book_pages.rank(:row_order).each do |book_page| %>
      <% if book_page.page_number.to_i.zero? %>
        <div class="col-md-3 col-sm-4 col-6 book-cover workgrid" >
        <%= link_to image_tag(book_page.image), book_page.image.url, 'data-title': "<p><br /><span style='font-family: latolight_italic'>#{book_page.book_title}</span> (#{page_number_or_cover(book_page)})" +  "&nbsp;&nbsp;&nbsp;" + "#{book_page.year.year}" + "&nbsp;&nbsp;&nbsp;" + "#{book_page.dimensions}</p>", 'data-coverstatus': "#{page_number_or_cover(book_page)}", class: 'img-fluid' %> 
          <% book_page.noncover.each do |noncov| %>
            <div class="hide" >
            <%= link_to image_tag(noncov.image), noncov.image.url, 'data-title': "<p><br /><span style='font-family: latolight_italic'>#{book_page.book_title}</span> (#{page_number_or_cover(noncov)})" +  "&nbsp;&nbsp;&nbsp;" + "#{book_page.year.year}" + "&nbsp;&nbsp;&nbsp;" + "#{book_page.dimensions}</p>", 'data-coverstatus': "#{page_number_or_cover(noncov)}", class: 'img-fluid' %> 
            </div>
          <% end %>
        </div>
      <% end %>
    <% end %>
  </div>
</div>

<script>
$(document).ready(function() {
  $('.book-cover').each(function() {
    $(this).magnificPopup({
      delegate: 'a',
      // Delay in milliseconds before popup is removed
      removalDelay: 300,
      // Class that is added to popup wrapper and background
      // make it unique to apply your CSS animations just to this exact popup
      mainClass: 'mfp-fade',
      // main options
      showCloseBtn: false,
      closeOnContentClick: true,
      type: 'image',
      gallery:{
        enabled:true,
        navigateByImgClick: false,
        arrowMarkup: '<span title="%title%" class="mfp-arrow mfp-arrow-%dir%"><i class="fa fa-caret-%dir% fa-3x mfp-prevent-close"></i></span>'
      },
      image: {
        titleSrc: 'data-title',
        markup:
            '<div class="mfp-figure">'+
                '<div class="mfp-img"></div>'+
                '<div class="mfp-bottom-bar">'+
                  '<div class="mfp-title"></div>'+
                '</div>'+
              '</div>', // Popup HTML markup. `.mfp-img` div will be replaced with img tag, `.mfp-close` by close button
        cursor: null
      }, 
      callbacks: {
        change: function() {
          coversArray = ['Front', 'Back'];
          coverStatus = this.currItem.el.attr('data-coverstatus')
          console.log(coverStatus);
          var halveSizeWithCss = function () {
            $('.mfp-content').css('max-width', '100%');
            $('.mfp-img').css('max-width', '5f0%');
          };
          $(document).on('click', function() {
            if (coversArray.includes(coverStatus)) {
              console.log("this should be half-sized");
              halveSizeWithCss();
            }
          });
        }
      }
    });
  });
  var idleTime = 0;
  var idleInterval = setInterval(timerIncrement, 1000);
  $(this).mousemove(function (e) {
    idleTime = 0;
  });
  $(this).keypress(function (e) {
    idleTime = 0;
  });
  function timerIncrement() {
    idleTime = idleTime + 1;
    if (idleTime > 3) {
      $( ".fa-3x" ).stop().fadeOut(function (){
      });
      $(this).mousemove(function (e) {
        $( ".fa-3x" ).stop().fadeIn();
        idleTime = 0;
      });
      $(this).keypress(function (e) {
        $( ".fa-3x" ).stop().fadeIn();
        idleTime = 0;
      });
    idleTime = 0;
    }
  }
});

</script>