<% provide(:title, "Software Developer") %>
<link 
      rel="stylesheet" 
      href="prism-atom-dark.scss" 
      type="text/css" 
      media="screen" 
/>

<div class="developer-portfolio">
  <div class="about-container">
    <ul class="ul-bar">
      <li><%= link_to 'HOME', root_path, class: "nav-link" %></li>
      <li><a href="#about" class="nav-link">ABOUT</a></li>
      <li><a href="#code-samples" class="nav-link">CODE</a></li>
      <li><a href="#web-apps" class="nav-link">WEB APPS</a></li>
      <li><a href="#skills-and-tools" class="nav-link">SKILLS</a></li>
      <li class="hire-me"><a href="#hire-me" class="nav-link">HIRE ME</a></li>
    </ul>
    <div id="about" class="about">
      <img src="https://s3.amazonaws.com/fleawigjessefarberdotcom/uploads/developer/me.jpg" class="me"/>

      <h1>Jesse Farber</h1>
      <h2>SOFTWARE DEVELOPER</h2>
      <hr class="bioline"/>
      <p class="bio col-sm-4 col-md-6 offset-sm-4 offset-md-3">
        Jesse Farber brings his award-winning creative talents and passion for detail to his full-stack software and web development, producing elegant solutions with innovative design.
      </p>
    </div>
   </div>
   <div class="white-background">
      <h3 id="code-samples">Code Snippets</h3>
      <hr class="lightgreen">
        <div class="box padded-header">
          <h4>Luhn Algorithm</h4>
            <p>
              This Ruby program checks a number with the Luhn algorithm, a method for determining valid and invalid numbers for credit cards and other identification purposes. It is meant to prevent users from accidental errors. 
            </p>
        </div>

        <div class="box">
          <pre><code class="language-ruby">module Luhn
  def self.is_valid?(number)
    revnumber = number.to_s.reverse
    split_revnumber = revnumber.split('').map { |digit| digit.to_i }
    split_revnumber.length.times do |n|
      if n.odd?
        split_revnumber[n] *= 2
        if split_revnumber[n] &gt; 9
          split_revnumber[n] -= 9
        end
      end
    end 
    digit_sum = split_revnumber.inject(0){|sum,x| sum + x }
    if digit_sum % 10 == 0
      puts true
    else 
      puts false
    end
  end
end

Luhn.is_valid?(4194560385008504)</code></pre>   
        </div>

        <br class="clear" />
        <div class="reverse-wrapper">

          <div class="box reverse-child padded-header">
          <h4>Recursive and Iterative Fibonacci Sequences</h4>
           <p>
             This Ruby program provides two different methods to find the Fibonacci sequence value for a particular number: one recursive solution, and one iterative solution. It also uses Ruby's Benchmark module to show which method finds the value more efficiently.
           </p>
          </div>
          <div class="box reverse-child">
      <pre><code class="language-ruby">class Fib_sequence
  def recursive_fib(n)
    if n &lt; 2
      n
    else
      recursive_fib(n - 1) + recursive_fib(n - 2)
    end
  end

  def iterative_fib(num)
    fib_numbers = [0, 1]
    (1..num).each do |n|
      if n &lt; 2
        fib_numbers[n] = n
      else 
        fib_numbers[n] = fib_numbers[n - 1] + fib_numbers[n - 2]
        n += 1
      end   
    end
    fib_numbers.last
  end
end

f = Fib_sequence.new

num = 35
puts f.recursive_fib(num)
puts f.iterative_fib(num)

Benchmark.bm do |x|
  x.report(&quot;recursive_fib&quot;) { f.recursive_fib(num) }
  x.report(&quot;iterative_fib&quot;) { f.iterative_fib(num) }
end</code></pre>
          </div>
        </div>

          <br class="clear" />
          <div class="box padded-header">
            <h4>Linked Lists</h4>
            <p>
              This Ruby program provides methods for working with a linked list data structure, including building the list and printing the series of values, reversing the node sequence, and using the Floyd's Cycle Detection Algorithm (aka Tortoise and Hare) to check whether the list contains a loop.
            </p>
          </div>

        <div class="box">
    <pre><code class="language-ruby">class LinkedListNode
  attr_accessor :value, :next_node

  def initialize(value, next_node=nil)
    @value = value
    @next_node = next_node
  end
end

def print_values(list_node)
  if list_node
    print &quot;#{list_node.value} --&gt; &quot;
    print_values(list_node.next_node)
  else
    print &quot;nil\n&quot;
    return
  end
end

def reverse_list(list, previous=nil)
  while list
    new_list = LinkedListNode.new(list.value, previous)
    list = list.next_node
    previous = new_list
  end
  list = new_list
end

def jump_two_spaces(h)
  h = h.next_node.next_node
end

def jump_one_space(t)
  t = t.next_node
end

def has_infinite_loop?(list)
  tortoise = hare = list
  while hare &amp;&amp; hare.next_node
    hare = hare.next_node.next_node
    tortoise = tortoise.next_node
    return true if hare == tortoise
  end
  return false
end</code></pre>


        </div>

        <br class="clear" />
          
          <h3 id="web-apps">Web Apps</h3>
          <hr class="lightgreen"/>

          <div class="box">
            <h4>Quote Generator</h4>
            <img src="https://s3.amazonaws.com/fleawigjessefarberdotcom/uploads/developer/splurty.png" class="full-width" />
          <p class="padded-header padded-caption">
            A database-powered quote generator with a mobile-first
            design, using the Ruby on Rails framework, HTML, and CSS.
            Uses Git and GitHub for version control, and launched
            on Heroku.
          </p>
          </div>
            <div class="box">
        <h4>Yelp Clone</h4>
        <img src="https://s3.amazonaws.com/fleawigjessefarberdotcom/uploads/developer/nomster.png" class="full-width" />
        <p class="padded-header padded-caption">
          A Yelp clone that integrates with the Google Maps API 
          and includes features like user comments, star ratings,
          image uploading, and user authentication.
        </p>
      </div>
      <br class="clear" />

      <div class="box">
        <h4>Two-Sided Market Place</h4>
        <img src="https://s3.amazonaws.com/fleawigjessefarberdotcom/uploads/developer/flixter.png" class="full-width" />
        <p class="padded-header padded-caption">
          A two-sided, video-streaming marketplace platform that
          features credit card payment capabilities, user role
          management, complex user interfaces, and advanced
          database relationships.
        </p>
      </div>
      <div class="box">
        <h4>Test Driven Development</h4>
        <img src="https://s3.amazonaws.com/fleawigjessefarberdotcom/uploads/developer/grammable.png" class="full-width" />
        <p class="padded-header padded-caption">
          An Instagram clone that was built using industry-standard, test-driven
          development following numerous red/green/refactor cycles.
        </p>
      </div>
      <br class="clear" />
      <div class="box">
        <h4>Single Page Todo Application</h4>
        <img src="https://s3.amazonaws.com/fleawigjessefarberdotcom/uploads/developer/todoster.png" class="full-width" />
        <p class="padded-header padded-caption">
          A single-page to-do application featuring a
          fluid user interface that uses JavaScript to allow users to rapidly add dynamic content.
        </p>
      </div>
      <div class="box">
        <h4>Agile Team Project</h4>
        <img src="https://s3.amazonaws.com/fleawigjessefarberdotcom/uploads/developer/chess.png" class="full-width" />
        <p class="padded-header padded-caption">
          A chess application built as part of an Agile software development team.
          Under the guidance of a senior software engineer,
          we had weekly Agile team meetings for code reviews, sprint planning,
          and feature assignments.
        </p>
      </div>
      <br class="clear" />
      <br /><br />
      <h3 id="skills-and-tools">Skills &amp; Tools</h3>
      <hr class="lightgreen" />
      <p class="skills-and-tools">
        Jesse has developed proficiency and expertise 
        in the following programming languages, and 
        experience with the following tools.
      </p>
        <div class="icons img-fluid">
        <img src=" https://s3.amazonaws.com/fleawigjessefarberdotcom/uploads/developer/github.png" class="icon" />
        <img src="https://s3.amazonaws.com/fleawigjessefarberdotcom/uploads/developer/rubocop.png" class="icon" />
        <img src="https://s3.amazonaws.com/fleawigjessefarberdotcom/uploads/developer/trello.png" class="icon" />
        <img src="https://s3.amazonaws.com/fleawigjessefarberdotcom/uploads/developer/slack.png" class="icon" />
        <img src="https://s3.amazonaws.com/fleawigjessefarberdotcom/uploads/developer/codeship.png" class="icon" />

        <br class="clear" />
        <img src="https://s3.amazonaws.com/fleawigjessefarberdotcom/uploads/developer/skills.png" class="icon" />
      </div>
      <br /><br /> 
    </div>
    <div class="contact-me" id="hire-me">
    <h3 class="contact-headline">Contact</h3>
    <hr class="lightgreen" />
    <p class="contact-info">
    Currently entertaining new opportunities.
    Please get in touch via email:
    </p>
    <p>
        <a href="mailto:jesse@jessefarber.com" class="contact-link">
          jesse@jessefarber.com
        </a>
        <br />
        <%= link_to 'mailto:jesse@jessefarber.com', class: "nav-link" do %>
          <i class="fa fa-envelope-o" aria-hidden="true"></i>
        <% end %>
      </p>
    </div>
</div>

<script>
$(document).ready(function() {
  var $root = $('html, body');
  $('a').click(function() {
      $root.animate({
          scrollTop: $( $.attr(this, 'href') ).offset().top
      }, 500);
      return false;
  });
  Prism.highlightAll();
});
</script>